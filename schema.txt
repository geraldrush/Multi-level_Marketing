model User {
    id           String         @id @default(cuid())
    name         String
    email        String         @unique
    password     String
    role         UserRole       @default(USER)
    Order        Order[]
    Payment      Payment[]
    location     String
    Agent        Agent[]
    Notification Notification[]
    Chat         Chat[]
}

model Agent {
    id       String    @id @default(cuid())
    user     User      @relation(fields: [id], references: [id])
    name     String
    location String
    products Product[]
    stock    Int
    sales    Int
    Order    Order[]
    Chat     Chat[]
}

model Product {
    id          String  @id @default(cuid())
    name        String
    description String
    price       Int
    commission  Int
    Order       Order[]
    Agent       Agent?  @relation(fields: [agentId], references: [id])
    agentId     String?
}

model Order {
    id       String      @id @default(cuid())
    user     User        @relation(fields: [id], references: [id])
    agent    Agent       @relation(fields: [id], references: [id])
    product  Product     @relation(fields: [id], references: [id])
    quantity Int
    status   OrderStatus @default(PENDING)
}

model Notification {
    id      String  @id @default(cuid())
    user    User    @relation(fields: [id], references: [id])
    message String
    read    Boolean @default(false)
}

model Chat {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [id], references: [id])
    agent     Agent    @relation(fields: [id], references: [id])
    message   String
    timestamp DateTime @default(now())
}

model Payment {
    id     String   @id @default(cuid())
    user   User     @relation(fields: [id], references: [id])
    amount Int
    method String
    date   DateTime @default(now())
}

enum UserRole {
    USER
    AGENT
    ADMIN
}

enum OrderStatus {
    PENDING
    SHIPPED
    DELIVERED
}
